{"ast":null,"code":"import _classCallCheck from \"/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/src/menu/menuSections/drinks/Drink.js\";\nimport React, { Component } from \"react\";\nimport \"../../menu.css\";\n\nvar Drink =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Drink, _Component);\n\n  function Drink() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Drink);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Drink)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.checkMultiples = function (data) {\n      if (data) {\n        var dataArr = data.split(\" \");\n        return {\n          bool: true,\n          values: dataArr\n        };\n      } else {\n        return {\n          bool: false\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Drink, [{\n    key: \"render\",\n    value: function render() {\n      // let keysArr = Object.keys(this.props.item)\n      // this.sanitizeMultiples(keysArr, this.props.item)\n      return React.createElement(\"div\", {\n        className: \"menu-item d-flex mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-row dots\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"content dots-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.item.item_name), this.props.item.details && React.createElement(\"span\", {\n        className: \"item-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"(\", this.props.item.details, \")\"), this.props.item.pieces && React.createElement(\"span\", {\n        className: \"item-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"(\", this.props.item.pieces, \")\"), React.createElement(\"span\", {\n        className: \"price ml-auto ml-auto dots-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, (console.log(this.checkMultiples(this.props.item.pieces)) && this.checkMultiples(this.props.item.price)).bool ? \"(\".concat(this.checkMultiples[0], \") $\").concat(this.props.item.price[0], \" (\").concat(this.props.item.pieces[1], \") $\").concat(this.props.item.price[1]) : \"$\".concat(this.props.item.price))), this.props.item.ingredients && React.createElement(\"div\", {\n        className: \"item-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"(\", this.props.item.ingredients, \")\"));\n    }\n  }]);\n\n  return Drink;\n}(Component);\n\nexport { Drink as default };","map":{"version":3,"sources":["/Users/samuelfreedgood/Coding/GA/team-pentagram-zarutto/client/client/src/menu/menuSections/drinks/Drink.js"],"names":["React","Component","Drink","state","checkMultiples","data","dataArr","split","bool","values","props","item","item_name","details","pieces","console","log","price","ingredients"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,gBAAP;;IAEqBC,K;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ,E;;UAIRC,c,GAAiB,UAACC,IAAD,EAAU;AACzB,UAAIA,IAAJ,EAAU;AACR,YAAIC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;AACA,eAAO;AAACC,UAAAA,IAAI,EAAE,IAAP;AAAaC,UAAAA,MAAM,EAAEH;AAArB,SAAP;AACD,OAHD,MAGO;AACL,eAAO;AAACE,UAAAA,IAAI,EAAE;AAAP,SAAP;AACD;AACF,K;;;;;;;6BAEQ;AACP;AACA;AACA,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWC,IAAX,CAAgBC,SADnB,CADF,EAKI,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,OAAhB,IACA;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgC,KAAKH,KAAL,CAAWC,IAAX,CAAgBE,OAAhD,MANJ,EASI,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,MAAhB,IACA;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgC,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,MAAhD,MAVJ,EAYE;AAAM,QAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,CAACC,OAAO,CAACC,GAAR,CAAY,KAAKZ,cAAL,CAAoB,KAAKM,KAAL,CAAWC,IAAX,CAAgBG,MAApC,CAAZ,KACE,KAAKV,cAAL,CAAoB,KAAKM,KAAL,CAAWC,IAAX,CAAgBM,KAApC,CADH,EAC+CT,IAD/C,cAEM,KAAKJ,cAAL,CAAoB,CAApB,CAFN,gBAEkC,KAAKM,KAAL,CAAWC,IAAX,CAAgBM,KAAhB,CAAsB,CAAtB,CAFlC,eAE+D,KAAKP,KAAL,CAAWC,IAAX,CAAgBG,MAAhB,CAAuB,CAAvB,CAF/D,gBAE8F,KAAKJ,KAAL,CAAWC,IAAX,CAAgBM,KAAhB,CAAsB,CAAtB,CAF9F,eAGM,KAAKP,KAAL,CAAWC,IAAX,CAAgBM,KAHtB,CAFJ,CAZF,CADF,EAwBI,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,WAAhB,IACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+B,KAAKR,KAAL,CAAWC,IAAX,CAAgBO,WAA/C,MAzBJ,CADF;AA8BD;;;;EA/CgCjB,S;;SAAdC,K","sourcesContent":["import React, {Component} from \"react\"\nimport \"../../menu.css\"\n\nexport default class Drink extends Component {\n  state = {\n\n  }\n\n  checkMultiples = (data) => {\n    if (data) {\n      let dataArr = data.split(\" \")\n      return {bool: true, values: dataArr}\n    } else {\n      return {bool: false}\n    } \n  }\n\n  render() {\n    // let keysArr = Object.keys(this.props.item)\n    // this.sanitizeMultiples(keysArr, this.props.item)\n    return (\n      <div className=\"menu-item d-flex mb-2\">\n        <div className=\"flex-row dots\">\n          <span className=\"content dots-left\">\n            {this.props.item.item_name}\n          </span>\n          {\n            this.props.item.details &&\n            <span className=\"item-detail\">({this.props.item.details})</span>\n          }\n          {\n            this.props.item.pieces &&\n            <span className=\"item-detail\">({this.props.item.pieces})</span>\n          }\n          <span className=\"price ml-auto ml-auto dots-right\">\n            {\n              (console.log(this.checkMultiples(this.props.item.pieces))\n              && this.checkMultiples(this.props.item.price)).bool\n              ? `(${this.checkMultiples[0]}) $${this.props.item.price[0]} (${this.props.item.pieces[1]}) $${this.props.item.price[1]}`\n              : `$${this.props.item.price}`\n            }\n            \n          </span>\n        </div>\n        {\n          this.props.item.ingredients &&\n          <div className=\"item-detail\">({this.props.item.ingredients})</div>\n        }\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}